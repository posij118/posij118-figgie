const CLIENT = {
  MESSAGE: {
    NEW_GUEST: "NEW_GUEST",
    USER_LOGIN: "USER_LOGIN",
    JOIN_LOBBY: "JOIN_LOBBY",
    JOIN_GAME: "JOIN_GAME",
    CREATE_GAME: "CREATE_GAME",
    TOGGLE_READY: "TOGGLE_READY",
    POST_ORDERS: "POST_ORDERS",
    CANCEL_SUIT_TYPE_ORDERS: "CANCEL_SUIT_TYPE_ORDERS",
    CANCEL_ALL_ORDERS: "CANCEL_ALL_ORDERS",
    FILL_ORDER: "FILL_ORDER",
    LEAVE_GAME: "LEAVE_GAME",
    LOG_OUT: "LOG_OUT",
    REJOIN_GAME: "REJOIN_GAME",
  },
};

const SERVER = {
  MESSAGE: {
    CONNECTION_TIMED_OUT: "CONNECTION_TIMED_OUT",
    SESSION_NOT_FOUND: "SESSION_NOT_FOUND",
    WRONG_USERNAME_OR_PASSWORD: "WRONG_USERNAME_OR_PASSWORD",
  },
};

const SOCKET_TYPES = {
  ITSELF: "ITSELF",
  SAME_GAME: "SAME_GAME",
  MAP_WS_ID_TO_PAYLOAD: "MAP_WS_ID_TO_PAYLOAD",
  ALL: "ALL",
};

const TYPES = {
  ERROR: "ERROR",
  PRE_GAME_CONFIG: "PRE_GAME_CONFIG",
  GAME_CONFIG: "GAME_CONFIG",
  NEW_ORDER: "NEW_ORDER",
  CANCELED_ORDERS_IDS: "CANCELED_ORDERS_IDS",
  CANCELED_ORDERS_PLAYER_NAME: "CANCELED_ORDERS_PLAYER_NAME",
  ORDER_FILLED: "ORDER_FILLED",
  END_GAME: "END_GAME",
  PLAYER_LEFT: "PLAYER_LEFT",
  JOIN_EXISTING_GAME: "JOIN_EXISTING_GAME",
  REJOIN_GAME: "REJOIN_STARTED_GAME",
  GUEST_REGISTRATION_SUCCESSFUL: "GUEST_REGISTRATION_SUCCESSFUL",
  LOGIN_SUCCESSFUL: "LOGIN_SUCCESSFUL",
  CLOSING_MESSAGE: "CLOSING_MESSAGE",
  ANNOUNCE_GAMES: "ANNOUNCE_GAMES",
  ANNOUNCE_NEXT_GAME: "ANNOUNCE_NEXT_GAME",
  ANNOUNCE_WAITING_PLAYER: "ANNOUNCE_WAITING_PLAYER",
  ANNOUNCE_HAS_STARTED: "ANNOUNCE_HAS_STARTED",
  ANNOUNCE_PLAYER_JOINED: "ANNOUNCE_PLAYER_JOINED",
  ANNOUNCE_PLAYER_LEFT: "ANNOUNCE_PLAYER_LEFT",
  ANNOUNCE_NEW_GAME: "ANNOUNCE_NEW_GAME",
};

// prettier-ignore
const SUIT_IDS_ARRAY = [
  0, 0, 0, 0, 0, 0, 0, 0,              
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
];

const ORDER_PRICES_EMPTY = {
  bidsClubs: "",
  offersClubs: "",
  bidsSpades: "",
  offersSpades: "",
  bidsDiamonds: "",
  offersDiamonds: "",
  bidsHearts: "",
  offersHearts: "",
};

const ORDERS_EMPTY = {
  bidsClubs: [],
  offersClubs: [],
  bidsSpades: [],
  offersSpades: [],
  bidsDiamonds: [],
  offersDiamonds: [],
  bidsHearts: [],
  offersHearts: [],
};

const MALFORMED_REQUEST = "Malformed request";
const MALFORMED_REQUEST_OBJECT = {
  socketTypesToInform: SOCKET_TYPES.ITSELF,
  type: TYPES.ERROR,
  payload: { message: MALFORMED_REQUEST, stack: "" },
};

const BASE_RATING = 1500;
const BASE_RATING_DEV = 350;
const BASE_RATING_VOL = 0.06;
const BASE_CHIPS = 350;

// formula: dev = sqrt(dev^2 + num_days * DAILY_DEV_INCREASE)
// determines how fast rating deviation increases when inactive
const DAILY_DEV_INCREASE = 100;

// constant to determine the magnitude of rating changes
const DELTA_CHIPS_TO_GET_PLUS_ONE_SCORE = 500;

if (typeof module !== "undefined" && module.exports) {
  module.exports = exports = {
    CLIENT,
    SERVER,
    SOCKET_TYPES,
    TYPES,
    SUIT_IDS_ARRAY,
    ORDER_PRICES_EMPTY,
    ORDERS_EMPTY,
    MALFORMED_REQUEST,
    MALFORMED_REQUEST_OBJECT,
    BASE_RATING,
    BASE_RATING_DEV,
    BASE_CHIPS,
    DAILY_DEV_INCREASE,
    DELTA_CHIPS_TO_GET_PLUS_ONE_SCORE,
    BASE_RATING_VOL,
  };
}
